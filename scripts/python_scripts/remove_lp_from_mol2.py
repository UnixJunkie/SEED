#!/usr/bin/env python
"""
This script aims at removing CGenFF lone pair particles from a mol2 file
generated by mol2orig_to_mol2seed4_cgenff4_singlefiles.py
"""
import sys
import os
if len(sys.argv) != 2:
	print("Usage = python remove_lp_from_mol2.py lig.mol2")

# Read file
in_fn = sys.argv[1]
with open(in_fn, 'r') as ff:
    mol = ff.readlines()
in_fn_split = in_fn.rsplit(".", 1)
out_fn = in_fn_split[0] + "_noDummy.mol2" 

whereami = 0
lp_idx = []
lp_count = 0
lp_bond_idx = []
# find lone pairs (if any)
for line in mol:
    currline = line.split()
    if '@<TRIPOS>' in line:
        if '@<TRIPOS>ATOM' in line:
            whereami = 1 # atom section
        elif '@<TRIPOS>BOND' in line:
            whereami = 2 # bond section
        else:
            whereami = 3 # others
    elif whereami == 1:
        if currline[5] == 'Du':
            lp_idx.append(currline[0])
            lp_count += 1
    elif whereami == 2 and lp_count > 0:
        if (currline[1] in lp_idx) or (currline[2] in lp_idx):
            lp_bond_idx.append(currline[0])

print("There are %d lone pairs in the molecule"%lp_count)
# rewriting outfile:
if (lp_count == 0):
    separator = ''
    out = separator.join(mol)
else:
    out = ""
    whereami = 0 
    for line in mol:
        currline = line.split()
        if line.strip().startswith("#"):
            out += line
        elif whereami == 0 and len(currline) == 5:
            print("Rewriting header")
            out += (" %s %s 1 0 0\n") % (int(currline[0])-lp_count, int(currline[1])-lp_count)
        elif '@<TRIPOS>' in line:
            if '@<TRIPOS>MOLECULE' in line:
                whereami = 0
            elif '@<TRIPOS>ATOM' in line:
                whereami = 1
            elif '@<TRIPOS>BOND' in line:
                whereami = 2
            elif '@<TRIPOS>ALT_TYPE' in line:
                whereami = 3
            else:
                whereami = 4
            out += line
        elif whereami == 1:
            if currline[0] not in lp_idx:
                out += line 
        elif whereami == 2:
            if (currline[1] not in lp_idx) and (currline[2] not in lp_idx):
                out += line
        elif (whereami == 3) and ('_ALT_TYPE_SET' not in line):
            for token in currline:
                if token != "LPH" and token not in lp_idx:
                    out = out + token + " "
            out += "\n"
        else:
            out += line
            
with open(out_fn, 'w') as ff:
    ff.write(out)
